<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2021-07-24T01:04:54.981Z</id>
    <title>osmos::feed</title>
    <updated>2021-07-24T01:04:54.981Z</updated>
    <generator>osmosfeed 1.11.0</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[Build 一个最小的 Redis Docker Image]]></title>
        <id>https://www.kawabangga.com/?p=4411</id>
        <link href="https://www.kawabangga.com/posts/4411"/>
        <updated>2021-07-19T16:48:01.000Z</updated>
        <summary type="html"><![CDATA[好吧，我承认这么说可能违反了广告法，但是……它确实挺小的。 可以对比一组数据： 官方的 Redis 镜像：10 […]
Continue reading...
The post Build 一个最小的 Redis Docker Image first appeared on 卡瓦邦噶！.

相关文章:

Redis 的命令设计
Redis RESP3 的一些想法
IRedis 开发记2：CircleCI workflow 自动发布到 pypi
Django 项目使用 CircleCI
关于]]></summary>
        <author>
            <name>laixintao</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[程序员可能必读书单推荐（一）]]></title>
        <id>https://draveness.me//books-1</id>
        <link href="https://draveness.me//books-1"/>
        <updated>2021-07-16T00:00:00.000Z</updated>
        <author>
            <name>面向信仰编程</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何提高缓存系统的内存利用率和可扩展性 · NSDI '21]]></title>
        <id>https://draveness.me//papers-segcache</id>
        <link href="https://draveness.me//papers-segcache"/>
        <updated>2021-07-12T00:00:00.000Z</updated>
        <author>
            <name>面向信仰编程</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[对下载软件/文件进行校验的工具（Checksum and GPG）]]></title>
        <id>https://yeshan333.github.io/2021/07/10/checksum-gpg-tools/</id>
        <link href="https://yeshan333.github.io/2021/07/10/checksum-gpg-tools/"/>
        <updated>2021-07-10T18:23:57.000Z</updated>
        <summary type="html"><![CDATA[前言
之前装软件一直都没有验证安装文件的习惯，信息安全意识不高，碰巧最近没啥事，微微写篇文章记录下校验工具（互联网http、https、ftp 服务并没有那么安全，是可以被劫持篡改。老装软件选手了，是该养成个校验文件的习惯了）。
在互联网下载软件/文件的时候经常会看到官方提供了一段⌈校验和（checksum）⌋或包含校验和的文件供校验。常见的校验和有 md5、SHA 家族等。还有部分软件/文件会提供 GPG 校验文件（signature file, SIG）给下载者进行校验。
来看看这两种校验方式相关的工具。]]></summary>
        <author>
            <name>ShanSan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[警惕复用的陷阱]]></title>
        <id>https://www.kawabangga.com/?p=4392</id>
        <link href="https://www.kawabangga.com/posts/4392"/>
        <updated>2021-07-08T13:49:51.000Z</updated>
        <summary type="html"><![CDATA[最近经历了人生的低谷。原因是在重构一些 Ansible 的部署脚本，Ansible 是本着声明式的理念世界的， […]
Continue reading...
The post 警惕复用的陷阱 first appeared on 卡瓦邦噶！.

相关文章:

坑爹的部署脚本
开始用 Ansible 管理机器了
关于
SRE&Devops 每周分享 Issue #5
SRE&Devops 每周分享 Issue #3]]></summary>
        <author>
            <name>laixintao</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[开源软件源码编译指南]]></title>
        <id>https://www.kawabangga.com/?p=4373</id>
        <link href="https://www.kawabangga.com/posts/4373"/>
        <updated>2021-07-02T17:09:35.000Z</updated>
        <summary type="html"><![CDATA[之前在博客介绍了 Linux From Scratch, 最近发现 LFS 已经有新的版本 10.1 了，周末 […]
Continue reading...
The post 开源软件源码编译指南 first appeared on 卡瓦邦噶！.

相关文章:

珍藏资料
编译LFS的一些经验
如何杀死一个进程？
/bin /usr/bin 和 /usr/local/bin 的故事
SRE&Devops 每周分享 Issue #3]]></summary>
        <author>
            <name>laixintao</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Redis 容器化技术选型，K8S 并非唯一]]></title>
        <id>https://moelove.info/2021/07/02/Redis-%E5%AE%B9%E5%99%A8%E5%8C%96%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8BK8S-%E5%B9%B6%E9%9D%9E%E5%94%AF%E4%B8%80/</id>
        <link href="https://moelove.info/2021/07/02/Redis-%E5%AE%B9%E5%99%A8%E5%8C%96%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8BK8S-%E5%B9%B6%E9%9D%9E%E5%94%AF%E4%B8%80/"/>
        <updated>2021-07-02T04:39:40.000Z</updated>
        <summary type="html"><![CDATA[本文根据我在〖deeplus直播第247期〗线上分享演讲内容整理而成。
今天将分享的内容分为以下4个方面：
一、缘起
二、介绍多样的容器化技术
三、Redis介绍
四、Redis容器化方案的对比
一、缘起
首先我们先聊一下为什么今天我会分享这个主题。我和朋友一起组织了一个 Redis技术交流群，到现在已经经营了6年左右的时间，其中某一天在群里有一个小伙伴就抛出来一个问题：

他问大家线上的Redis有没有使用Docker安装？Docker使用Host的网络模式、磁盘使用本地挂载模式这种方案怎么样？这里的话我们暂时先不说这个方案如何，因为在今天的分享之后，我相信大家对于这个方案应该会有一个更清晰的认识和评价。
二、介绍多样的容器化技术
1、chroot和jails
在容器化技术方面，其实历史很久远了。虽然我们现在用的容器化技术，或者说 k8s，还有云原生的概念是近几年才火起来的，但是实际上就容器化技术的发展来说，其实是很早的了。比如说最早的时候来自chroot，chroot大家可能都用过，或者都有了解过，在1979年的时候它是来自Unix，它主要的功能是可以修改进程和子进程的/。
通过使用chroot达到什么样效果呢？使用chroot加某一个目录，然后再启动一个进程，那么这个进程自己所看到的 / ,就是我们平时所说的 / 目录，这个 / 就会是我们刚才指定的文件夹，或者说刚才指定的路径。这样子的话可以有效的保护我们操作系统上面的一些文件，或者说权限和安全相关的东西。
在2000年的时候，出现了一个新的技术，叫做jails，其实它已经具备了sandbox，就是沙箱环境的雏形。使用jails的话，可以让一个进程或者说创建的环境拥有独立的网络接口和IP地址，而当我们提到使用jails的话，我们肯定会想到一个问题，就是如果你有了独立的网络接口和IP地址，这样的话就不能发原始的套接字，…]]></summary>
        <author>
            <name>zhangjintao9020@gmail.com (张晋涛)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[为什么 Cloudflare 提供免费的服务？]]></title>
        <id>https://www.kawabangga.com/?p=4361</id>
        <link href="https://www.kawabangga.com/posts/4361"/>
        <updated>2021-07-01T14:39:58.000Z</updated>
        <summary type="html"><![CDATA[在我的博客切换到 Cloudflare 的 CDN 上之后，我发现速度快的惊人，原来 18s 才能加载完首页的 […]
Continue reading...
The post 为什么 Cloudflare 提供免费的服务？ first appeared on 卡瓦邦噶！.

相关文章:

欧格玛教会与言论自由
博客迁移到 Cloudflare
DNS 解析的原理
最近的工作感悟
Firefox Setup]]></summary>
        <author>
            <name>laixintao</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用 osmosfeed 创建自己的 Web RSS 阅读器]]></title>
        <id>https://yeshan333.github.io/2021/06/29/osmosfeed-rss-reader/</id>
        <link href="https://yeshan333.github.io/2021/06/29/osmosfeed-rss-reader/"/>
        <updated>2021-06-29T15:34:20.000Z</updated>
        <summary type="html"><![CDATA[之前一直用 App Store 上的一个 RSS 阅读器 RSS Reader Prime 订阅技术周刊和 dalao 的技术博客，不得不说挺好用的，奈何全线下架了，现在就平板上保留着这个 App，手机上没有（国区好用的 RSS 阅读器基本无了）。有时候又想着用手机读读技术文章（板子太大，不好拿），于是乎翻了下 GitHub rss-reader topic 下的相关阅读器项目，挑了手基于 Web 和 GitHub Pages 的 RSS 阅读器（Web 才是真的“跨端”，2333~），水篇文章微微记录下。]]></summary>
        <author>
            <name>ShanSan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[博客迁移到 Cloudflare]]></title>
        <id>https://www.kawabangga.com/?p=4331</id>
        <link href="https://www.kawabangga.com/posts/4331"/>
        <updated>2021-06-27T07:42:08.000Z</updated>
        <summary type="html"><![CDATA[周末收到邮件通知，说博客的流量马上要用完了。发现博客的访问量变高了许多，另外我将博客首页展示了最近的 5 篇文 […]
Continue reading...
The post 博客迁移到 Cloudflare first appeared on 卡瓦邦噶！.

相关文章:

为什么 Cloudflare 提供免费的服务？
欧格玛教会与言论自由
DNS 解析的原理
最近的工作感悟
Firefox Setup]]></summary>
        <author>
            <name>laixintao</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[K8S 生态周报| Kubernetes v1.22.0-beta.0 发布]]></title>
        <id>https://moelove.info/2021/06/27/K8S-%E7%94%9F%E6%80%81%E5%91%A8%E6%8A%A5-Kubernetes-v1.22.0-beta.0-%E5%8F%91%E5%B8%83/</id>
        <link href="https://moelove.info/2021/06/27/K8S-%E7%94%9F%E6%80%81%E5%91%A8%E6%8A%A5-Kubernetes-v1.22.0-beta.0-%E5%8F%91%E5%B8%83/"/>
        <updated>2021-06-26T21:52:12.000Z</updated>
        <summary type="html"><![CDATA[「K8S 生态周报」内容主要包含我所接触到的 K8S 生态相关的每周值得推荐的一些信息。欢迎订阅知乎专栏「k8s生态」。
runc v1.0 正式发布
从 2016 年 6 月发布 v1.0-rc1 版本开始，至今已整整 5 年时间，runc 历经多个 rc 版本终于发布了 v1.0 版本。整个过程及其思考请参考我之前的文章 《开源项目的 5 年长跑，runc v1.0 终于正式发布！》 。这里我们来看看 v1.0 新版本中带来了哪些值得注意的变更。
破化性变更
#2999 删除了 libcontainer/configs.Device* 标识，请使用 libcontainer/devices.* 来替代（是自 v1.0-rc94 开始废弃的）；
#2999 删除了 libcontainer/system.RunningInUserNS 函数，请使用 libcontainer/userns.RunningInUserNS 函数代替（同样是自 v1.0-rc94 开始废弃的）；
改进
#2994 在 runc update 的时候设置了 SkipDevices ，所以在此期间我们就不会更新 cgroups 了；
#3010 cgroup1 相关的 blkio 支持 BFQ weight 了，这里需要注意的是 2018 年 CFQ 已经从 Linux 删除，22019 年发布的 RHEL 8.0 和 Ubuntu 19.01 等发行版中也均使用 BFQ 替代了 CFQ 。关于 Linux 内核的 BFQ 和 CFQ 这里就不再展开了，只需要知道 BFQ 相比 CFQ 做到了低延迟和吞吐即可；
更多关于此版本的变更，请参考其 ReleaseNote ，现在 Docker/containerd 等项目已将 runc 依赖升级到了 v1.0 ，K8S 项目尚未合并。
Promethe…]]></summary>
        <author>
            <name>zhangjintao9020@gmail.com (张晋涛)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[更优雅的 Kubernetes 集群事件度量方案]]></title>
        <id>https://moelove.info/2021/06/25/%E6%9B%B4%E4%BC%98%E9%9B%85%E7%9A%84-Kubernetes-%E9%9B%86%E7%BE%A4%E4%BA%8B%E4%BB%B6%E5%BA%A6%E9%87%8F%E6%96%B9%E6%A1%88/</id>
        <link href="https://moelove.info/2021/06/25/%E6%9B%B4%E4%BC%98%E9%9B%85%E7%9A%84-Kubernetes-%E9%9B%86%E7%BE%A4%E4%BA%8B%E4%BB%B6%E5%BA%A6%E9%87%8F%E6%96%B9%E6%A1%88/"/>
        <updated>2021-06-24T21:53:03.000Z</updated>
        <summary type="html"><![CDATA[大家好，我是张晋涛。

群里有个小伙伴问了我上图中这个问题，如何度量滚动升级这个过程的时间。
这个问题可以抽象为一种通用需求，适用于多种场景。
比如你是 Kubernetes 集群的管理员，你想度量这个过程中的耗时，以便发现优化点；
比如你是在做 CI/CD ，你想通过度量这个过程的耗时，来给出 CI/CD 过程的耗时；
现有方案
Kubernetes 已经提供了很方便的办法来解决此问题，也就是我回复中谈到的，通过 event 来度量即可。
比如，我们在 K8S 中，创建一个 deployment，看看这个过程中的 event 信息：
➜ ~ kubectl create ns moelove
namespace/moelove created
➜ ~ kubectl -n moelove create deployment redis --image=ghcr.io/moelove/redis:alpine
deployment.apps/redis created
➜ ~ kubectl -n moelove get deploy
NAME READY UP-TO-DATE AVAILABLE AGE
redis 1/1 1 1 16s
➜ ~ kubectl -n moelove get events
LAST SEEN TYPE REASON OBJECT MESSAGE
27s Normal Scheduled pod/redis-687967dbc5-gsz5n Successfully assigned moelove/redis-687967dbc5-gsz5n to kind-control-plane
27s Normal Pulled pod/redis-687967dbc5-gsz5n Container image "ghcr.io/moelove…]]></summary>
        <author>
            <name>zhangjintao9020@gmail.com (张晋涛)</name>
        </author>
    </entry>
</feed>