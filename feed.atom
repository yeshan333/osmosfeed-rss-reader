<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2022-01-27T00:24:58.900Z</id>
    <title>osmos::feed</title>
    <updated>2022-01-27T00:24:58.900Z</updated>
    <generator>osmosfeed 1.12.0</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[周刊（第2期）：从笔记软件谈被体制化]]></title>
        <id>https://www.codedump.info/post/20220123-weekly-2/</id>
        <link href="https://www.codedump.info/post/20220123-weekly-2/"/>
        <updated>2022-01-23T07:38:31.000Z</updated>
        <summary type="html"><![CDATA[从笔记软件谈被体制化
前两周，一则收购消息，在偌大的中文互联网上，几乎没有掀起任何的讨论：
为知笔记并入 ONES，WizNote X 迎来新的征程
我是为知笔记的老用户了，从 2011 年就开始使用为知笔记，即便是现在不怎么使用的情况下，也已经把 VIP 会员续费到了 2024 年。在我看来，为知笔记是一个气质与众不同的互联网产品：
在互联网上几乎没看到这款产品主动来宣传自己，都是靠用户的口碑传播，最开始我也是通过用户的介绍知道这款产品的。
是最早支持 Markdown 的笔记本软件，这在我最开始了解 MD 并且开始用这个格式来记录笔记时起了很大的帮助。
价格良心。
所以，当看到为知笔记被收购的新闻，心情还是有些复杂的。我大体知道一些互联网产品的玩法，知道为知笔记应该生存的不太好，被收购了也许对团队是个好事。
于是，我开始回想起来，到底是什么样的契机，让我开始慢慢抛弃了传统的笔记软件，以及我现在都用什么方式记录笔记。
在 Evernote 刚出来的时候，多端可用、可以收藏文章、记录自己的笔记等等，我也大概是那时候开始记录笔记的，然后就是后来使用网易云笔记，再到主力使用为知笔记。
让我逐渐意识到不应该把笔记托管到笔记软件上，有那么几个原因：
笔记软件之间竞争激烈，可能你从 A 家换到 B 家的产品时，数据的迁移是个大问题，有时候就不得不丢掉一部分难迁移的数据。比如把数据从 Evernote 迁移出来就很麻烦，还好我之前放在这里的笔记也不太用得上了。



Markdown 格式开始流行以后。



我大概是从2015年开始用MD格式开始写笔记的，这种格式马上就让我爱上了记录笔记：
格式对比LaTex来说太简单了，只有常见的几种格式，易学易写。
纯文本格式，这意味着用任何文本编辑器就能打开。
搭配好用的编辑器，能获得”所见即所得“的体验。
由此，我开始反思之前对笔记本软件的使…]]></summary>
        <author>
            <name>codedump的网络日志 on codedump的网络日志</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[周刊第1期：开刊，数字化生活数据]]></title>
        <id>https://www.codedump.info/post/20220116-weekly-1/</id>
        <link href="https://www.codedump.info/post/20220116-weekly-1/"/>
        <updated>2022-01-16T02:00:54.000Z</updated>
        <summary type="html"><![CDATA[为什么会写周刊
我为写周刊这个事情思考了小一阵子。
列举了好几个优点和缺点。比如，优点有能以输出来倒逼自己的输入，缺点有我的积累是否能够足以支撑我每周写一点东西，以及这种有明确时间限制的输出，是否会给我带来心智负担，等等。再比如，以往的博客内容都是很“硬”的技术内容，周刊不可能也不会每周都更新硬技术文章，会不会导致读者群有点分裂。
思考到最后，我还是决定写周刊。
从去年开始远程工作，大部分时间都在家里。由于我又很宅，网购也足够的发达，这又让我更宅了。然而，“物理”意义上的活动范围变小，并不意味着“逻辑”上能触达的范围也变小了，实际情况是，由于把通勤时间节省下来，我有更多时间看书、跑步了。所以，我需要一种方式，能输出我看到的一些东西，来与外界发生交流。
我在微博上看到了这么两句话，也反向让我坚定了这么做的意义。
（宋一松SYS的微博）
社交媒体在我看来最大的价值：它是最开放的peer review system
硅谷王川的微博
让读书产生好处的最简单办法是，一旦有灵感和想法之后，马上写出来，公开发布在社交媒体上，即使不成熟也没关系。写的过程也是自己深度思考的一个步骤，外人的有价值评论可帮你不断推敲，或给你带来新的线索，积累多了自然会出深刻的洞见。一个人孤立封闭的傻读写笔记，很难迅速提高思考深度。
周刊于我的意义，就是能定期把自己想到、看到的事情都公开出去，反向的让自己定期整理、输出，这是我突破“物理”界限和人交流的手段之一。内容将会以自己的一些想法、业界的动态、推荐、读书、影视等为准，与我写的其他技术文章相比，不会这么“硬”。
另外，写周刊还有一个好处，之前有很多想法、念头会散落在各种社交平台这样的新媒体上，实际对整理、汇总、索引等也不好，把念头汇之于文章，用这种更老式的传播方式可以更好得记录下来。
数字化生活数据
既然谈到了周刊做为个人对外输出的一个手段，我就想起最近几年一…]]></summary>
        <author>
            <name>codedump的网络日志 on codedump的网络日志</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.12.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.12.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.12.0"/>
        <updated>2022-01-10T05:25:18.000Z</updated>
        <summary type="html"><![CDATA[New: When one of the sources download fails, fall back to cache and continue rest of the build.
Chore: Dependency updates
Added docs for Netlify deployment
Fixed #71 #69 #65
Thank you: @sokomin, @molakirlee, @philippnagel, @tianheg]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[K8S 生态周报| 2021 回顾和 2022 展望]]></title>
        <id>https://moelove.info/2022/01/06/K8S-%E7%94%9F%E6%80%81%E5%91%A8%E6%8A%A5-2021-%E5%9B%9E%E9%A1%BE%E5%92%8C-2022-%E5%B1%95%E6%9C%9B/</id>
        <link href="https://moelove.info/2022/01/06/K8S-%E7%94%9F%E6%80%81%E5%91%A8%E6%8A%A5-2021-%E5%9B%9E%E9%A1%BE%E5%92%8C-2022-%E5%B1%95%E6%9C%9B/"/>
        <updated>2022-01-06T11:18:41.000Z</updated>
        <summary type="html"><![CDATA[「K8S 生态周报」内容主要包含我所接触到的 K8S 生态相关的每周值得推荐的一些信息。欢迎订阅知乎专栏「k8s生态」。
大家好，我是张晋涛。
2021 年已经结束了，我们来对 Kubernetes 及相关生态做个回顾和总结。
Kubernetes 的 2021
从 2021 年的 4 月份开始， Kubernetes 的发版节奏由原先的每 3 个月发布一个版本，修改成了每 4 个月发布一个版本。所以在 2021 年，Kubernetes 一共发布了 3 个大版本。包括 v1.21、v1.22 和 v1.23 。
从整体的功能上而言，主要侧重在以下的几个方面。
资源利用
内存管理器（kubelet）
在 Kubernetes v1.21 中在 kubelet 组件生态中新增了一个 内存管理器 ，在 Linux 系统中，为需要保证 QoS 的 Pod 在多 NUMA 节点保障内存和大内存页分配。这个特性非常有用，尤其是当数据库类或者使用 DPDK 进行高性能数据包处理的应用要部署到 Kubernetes 中时，内存对其性能影响至关重要。
这里稍微聊点和 NUMA 相关的内容。简单来说就是在多 NUMA 结构下，为了保证效率，所以会按内存和 CPU 的相对距离来按 node 定义是否为 local memory 或者说本地内存，同时由于实际位置不同，所以就可能会产生内存分配不均匀的情况了。比如，我们可以使用 numactl 管理工具查看下当前机器上的情况：
[tao@moelove ~]# numactl -H
available: 2 nodes (0-1)
node 0 cpus: 0 1 2 3 4 5 6 7 8 9 20 21 22 23 24 25 26 27 28 29
node 0 size: 65186 MB
node 0 free: 9769 MB
node…]]></summary>
        <author>
            <name>zhangjintao9020@gmail.com (张晋涛)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[网络数字身份认证术]]></title>
        <id>https://coolshell.cn/?p=21708</id>
        <link href="https://coolshell.cn/articles/21708.html"/>
        <updated>2022-01-02T08:38:13.000Z</updated>
        <summary type="html"><![CDATA[这篇文章是《HTTP API 认证授权术》的姊妹篇，在那篇文章中，主要介绍了 HTTP API 认证和授权技术中用到的 HTTP Basic, Digest A...
 Read More  Read More
网络数字身份认证术 first appeared on 酷 壳 - CoolShell.]]></summary>
        <author>
            <name>陈皓</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[2021 | 肆意随心]]></title>
        <id>https://yeshan333.github.io/2022/01/01/2021-annual-reviewed/</id>
        <link href="https://yeshan333.github.io/2022/01/01/2021-annual-reviewed/"/>
        <updated>2022-01-01T12:55:00.000Z</updated>
        <summary type="html"><![CDATA[Yeah
“兜兜转转”又一年了，又到了该水年度 Review 的时候啦✅❇️。
算下来，博客三年了，准备开启新的三年了。这篇总结也算是第三篇总结了，3 - 可以说是我很喜欢的数字，挺多网名（ShanSan、yeshan333），还有博客域名（shansan.top、shan333.cn、…）是和“三”有关的（and so on），也算是“谐音梗”啦😎？
回头看看之前写的几篇总结，还挺有意思的。21 年似乎并没有太多那么刻意去做的事，想到了就去试试了。这一次，不需要那么的有条理性，随手一记。]]></summary>
        <author>
            <name>ShanSan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[etcd 3.5版本的joint consensus实现解析]]></title>
        <id>https://www.codedump.info/post/20220101-etcd3.5-joint-consensus/</id>
        <link href="https://www.codedump.info/post/20220101-etcd3.5-joint-consensus/"/>
        <updated>2022-01-01T07:02:50.000Z</updated>
        <summary type="html"><![CDATA[概述
在以前的etcd实现中，“集群节点变更”这一功能，仅支持每次变更一个节点，最新的etcd已经能支持一次变更多个节点配置的功能了。本文将就这部分的实现进行解析。
原理
Raft论文《CONSENSUS: BRIDGING THEORY AND PRACTICE》的第四章”集群成员变更“中，支持两种集群变更方式：
每次变更单节点，即“One Server Config Change”。
多节点联合共识，即“Joint Consensus”。
本文先就这两种实现方式进行原理上的讲解。
集群节点变更的问题
要保证Raft协议的安全性，就是要保证任意时刻，集群中只有唯一的leader节点。如果不加限制条件，那么动态向当前运行集群增删节点的操作，有可能会导致存在多个leader的情况。如下图所示：



图中有两种颜色的配置，绿色表示旧的集群配置（C_old），蓝色表示新的集群配置（C_new），如果不加任何限制，直接将配置启用，由于不同的集群节点之间，存在时间差，那么可能出现这样的情况：
Server{1,2}：当前都使用旧的集群配置，所以可能选出server1为集群的leader。
Server{3,4,5}：当前都使用新的集群配置，可能选出server3为集群的leader。
由上图可以看到：如果不加任何限制，直接应用新的集群配置，由于时间差的原因，可能导致集群中出现两个不同leader的情况。
单节点成员变更（One Server ConfChange）
“单节点成员变更”，意指每次只添加或删除一个节点，这样就能保证集群的安全性，不会在同一时间出现多个leader的情况。之所以能有这个保证，是因为每次变更一个节点，那么新旧两种配置的半数节点（majorrity）肯定存在交集。以下图来说明：



上图演示了向偶数或奇数的集群增删一个节点的所有可能情况。不论哪种情况，新旧配…]]></summary>
        <author>
            <name>codedump的网络日志 on codedump的网络日志</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[6 个月内做了 15 场公开技术分享，我的 2021 是这样过的]]></title>
        <id>https://moelove.info/2021/12/30/6-%E4%B8%AA%E6%9C%88%E5%86%85%E5%81%9A%E4%BA%86-15-%E5%9C%BA%E5%85%AC%E5%BC%80%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%E6%88%91%E7%9A%84-2021-%E6%98%AF%E8%BF%99%E6%A0%B7%E8%BF%87%E7%9A%84/</id>
        <link href="https://moelove.info/2021/12/30/6-%E4%B8%AA%E6%9C%88%E5%86%85%E5%81%9A%E4%BA%86-15-%E5%9C%BA%E5%85%AC%E5%BC%80%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%E6%88%91%E7%9A%84-2021-%E6%98%AF%E8%BF%99%E6%A0%B7%E8%BF%87%E7%9A%84/"/>
        <updated>2021-12-30T13:39:12.000Z</updated>
        <summary type="html"><![CDATA[大家好，我是张晋涛。
一眨眼 2021 年就要结束了，我每年都会惯例的做个小回顾。2021 年也发生了很多的事情值得记录一下。
生活与换工作
这两年的疫情对每个人的生活都或多或少的产生了一定的影响，对我而言也是一样。更多的可能是一些想法和心态上的变化。
我在 2020 年的回顾文章 《新晋程序员奶爸的云原生之路》 中有聊过，我和小可爱的宝宝在 2020 年出生了。
相比于去年的各种手忙脚乱，以及学习和探索，今年整体来说已经轻松了很多。半夜已经基本上不需要再起来哄他或者冲奶了，也增加了很多互动，变得更加有趣了。
我也更多的意识到对家人的陪伴是很关键的，之前总是在各种忙，在家人的陪伴方面是少了很多。
得益于今年换了工作，现在在 API7.AI 是远程工作，全职做开源，工作之余也有了更多的时间陪伴家人。
换工作期间有两个有趣的插曲跟大家一起分享下：
爆火的离职消息
加了我微信或者关注了我其他社交媒体账号的小伙伴可能会发现，我更新还是比较频繁的。
在我从前司离职当天，我惯例的发了条 "江湖再会" 的消息，然后我就跟小可爱约会去了。
结果很意外的，这条消息得到了很多关注。
朋友圈自不必说，还有很多小伙伴给我发消息询问情况的。
在推上有 3w 的展示和 1w 多的互动。在脉脉上甚至给我送上了脉脉周榜的前 100 名，感谢大家的关注。

无缝衔接
其实我本来想要早点交接完在离职后休息一段时间的，不过老板让我多待了段时间，所以恰好周五是 last day。
经过了两天和平时差不多一样的周末后，我就直接入职 API7.AI 飞去珠海跟团队小伙伴团建去了。
基本上算是无缝衔接了，也就是正常的过了个周末罢了。这敬业程度，评个劳模不过分吧？（哈哈哈
远程工作的那些事
再就是来聊聊我现在的工作，前面提到了，我现在是在 API7.AI 远程全职做开源。
熟悉我的小伙伴可能知道，我一直都在参与开源项目和…]]></summary>
        <author>
            <name>zhangjintao9020@gmail.com (张晋涛)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[彻底搞懂 Kubernetes 中的 Events]]></title>
        <id>https://moelove.info/2021/12/28/%E5%BD%BB%E5%BA%95%E6%90%9E%E6%87%82-Kubernetes-%E4%B8%AD%E7%9A%84-Events/</id>
        <link href="https://moelove.info/2021/12/28/%E5%BD%BB%E5%BA%95%E6%90%9E%E6%87%82-Kubernetes-%E4%B8%AD%E7%9A%84-Events/"/>
        <updated>2021-12-28T14:12:37.000Z</updated>
        <summary type="html"><![CDATA[大家好，我是张晋涛。
之前我写了一篇《更优雅的 Kubernetes 集群事件度量方案》，利用 Jaeger 利用 tracing 的方式来采集 Kubernetes 集群中的 events 并进行展示。最终效果如下：

写那篇文章的时候，立了个 flag 要详细介绍下其中的原理，鸽了很久，现在年底了，也该发出来了。
Eents 概览
我们先来做个简单的示例，来看看 Kubernetes 集群中的 events 是什么。
创建一个新的名叫 moelove 的 namespace ，然后在其中创建一个叫做 redis 的 deployment。接下来查看这个 namespace 中的所有 events。
(MoeLove) ➜ kubectl create ns moelove
namespace/moelove created
(MoeLove) ➜ kubectl -n moelove create deployment redis --image=ghcr.io/moelove/redis:alpine
deployment.apps/redis created
(MoeLove) ➜ kubectl -n moelove get deploy
NAME READY UP-TO-DATE AVAILABLE AGE
redis 1/1 1 1 11s
(MoeLove) ➜ kubectl -n moelove get events
LAST SEEN TYPE REASON OBJECT MESSAGE
21s Normal Scheduled pod/redis-687967dbc5-27vmr Successfully assigned moelove/redis-687967dbc5-27vmr to kind-worker3
21s Normal Pullin…]]></summary>
        <author>
            <name>zhangjintao9020@gmail.com (张晋涛)</name>
        </author>
    </entry>
</feed>