{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": []
    },
    {
      "title": "ShanSan",
      "feedUrl": "https://shansan.top/rss2",
      "siteUrl": "https://yeshan333.github.io/",
      "articles": []
    },
    {
      "title": "酷 壳 – CoolShell",
      "feedUrl": "https://coolshell.cn/feed",
      "siteUrl": "https://coolshell.cn",
      "articles": []
    },
    {
      "title": "面向信仰编程",
      "feedUrl": "https://draveness.me/feed.xml",
      "siteUrl": "https://draveness.me/",
      "articles": []
    },
    {
      "title": "卡瓦邦噶！",
      "feedUrl": "https://www.kawabangga.com/feed",
      "siteUrl": "https://www.kawabangga.com",
      "articles": [
        {
          "id": "https://www.kawabangga.com/?p=4484",
          "author": "laixintao",
          "description": "ORM 帮我们节省了很多工作，基本上不用写 SQL，就可以完成很多 CRUD 操作，而且外键的关联也会自动被  […]\nContinue reading...\nThe post Django 优化数据库查询的一些经验 first appeared on 卡瓦邦噶！.\n\n相关文章:\n\nPyCon China 2019演讲Slide: Django Migration Under the Hood\n辅助Django开发的一些隐藏资源（文档）\nDjango的信号机制\n上海PyCon见！\n记一个 Python logging 多进程 rotate 问题",
          "link": "https://www.kawabangga.com/posts/4484",
          "publishedOn": "2021-08-20T12:06:12.000Z",
          "wordCount": 1054,
          "title": "Django 优化数据库查询的一些经验"
        },
        {
          "id": "https://www.kawabangga.com/?p=4476",
          "author": "laixintao",
          "description": "继《最近的工作感悟》中提到的大部分问题都解决了之后，有一些错误还是无法避免的，就试图想办法从监控系统中忽略掉。 […]\nContinue reading...\nThe post PromQL 使用多个 label 组合过滤 first appeared on 卡瓦邦噶！.\n\n相关文章:\n\n《Prometheus Up & Running》阅读\nPromQL 简明教程\nJoin Shopee & Work with Me!\nSLIC算法分割超像素原理及Python实现\nLinux文件打包和压缩命令总结",
          "link": "https://www.kawabangga.com/posts/4476",
          "publishedOn": "2021-08-09T07:43:02.000Z",
          "wordCount": 533,
          "title": "PromQL 使用多个 label 组合过滤"
        },
        {
          "id": "https://www.kawabangga.com/?p=4467",
          "author": "laixintao",
          "description": "最近读完了这本讲监控的书：Prometheus Up & Running，学到很多东西，在博客上推荐一 […]\nContinue reading...\nThe post 《Prometheus Up & Running》阅读 first appeared on 卡瓦邦噶！.\n\n相关文章:\n\nP99 是如何计算的\nPromQL 使用多个 label 组合过滤\nPromQL 简明教程\n关于\nGitops 的一些实践经验",
          "link": "https://www.kawabangga.com/posts/4467",
          "publishedOn": "2021-08-02T14:45:03.000Z",
          "wordCount": 541,
          "title": "《Prometheus Up & Running》阅读"
        }
      ]
    },
    {
      "title": "MoeLove",
      "feedUrl": "https://moelove.info/index.xml",
      "siteUrl": "https://moelove.info/",
      "articles": [
        {
          "id": "https://moelove.info/2021/08/05/K8S-%E7%94%9F%E6%80%81%E5%91%A8%E6%8A%A5-Kubernetes-v1.22.0-%E6%AD%A3%E5%BC%8F%E5%8F%91%E5%B8%83%E6%96%B0%E7%89%B9%E6%80%A7%E4%B8%80%E8%A7%88/",
          "author": "zhangjintao9020@gmail.com (张晋涛)",
          "description": "「K8S 生态周报」内容主要包含我所接触到的 K8S 生态相关的每周值得推荐的一些信息。欢迎订阅知乎专栏「k8s生态」。\nKubernetes v1.22 已经在今天正式发布了，这是 2021 年的第二个正式发布的版本。此版本中共包含 53 项增强更新，其中 13 项达到 stable，24 项达到 beta 还有 16 项为 alpha。当然，也有 3 项特性被标记为废弃。\n从今年的 4 月份，Kubernetes 的发布节奏由原来的每 3 个月一个版本修改成了每 4 个月一个版本，这也是第一个应用了此节奏的长周期版本。我们一起来看看有哪些值得注意的变更吧！\nServer-side Apply 特性达到 GA\nServer-side Apply 这个特性主要目标是把逻辑从 kubectl apply 移动到 kube-apiserver 中，这可以修复当前遇到的很多有关所有权冲突的问题。\n还记得在之前的『K8S生态周报』中我曾为你介绍过 Kubernetes 新增的 .meta.managedFields 吗？Server-side Apply 当前就是通过此特性来跟踪对象字段的更改的。\n同时此特性的好处在与你可以直接通过 API 完成声明式配置的操作，而无需依赖于特定的 kubectl apply 命令，比如直接通过 curl 即可完成。\n此功能的用法如下：\nkubectl apply --server-side [--dry-run=server]\n\nPod Security Policy 的替代品\nPodSecurity admission controller 是在 Kubernets v1.21 中被废弃的 Pod Security Policies  的替代品。\n这个 admission controller 可以按 namespace 级别启用 Pod Se…",
          "link": "https://moelove.info/2021/08/05/K8S-%E7%94%9F%E6%80%81%E5%91%A8%E6%8A%A5-Kubernetes-v1.22.0-%E6%AD%A3%E5%BC%8F%E5%8F%91%E5%B8%83%E6%96%B0%E7%89%B9%E6%80%A7%E4%B8%80%E8%A7%88/",
          "publishedOn": "2021-08-04T21:23:50.000Z",
          "wordCount": 412,
          "title": "K8S 生态周报| Kubernetes v1.22.0 正式发布，新特性一览！"
        }
      ]
    },
    {
      "title": "CJ Ting's Blog",
      "feedUrl": "https://cjting.me/index.xml",
      "siteUrl": "https://cjting.me/",
      "articles": [
        {
          "id": "https://cjting.me/2021/08/07/fourier-transform-and-audio-visualization/",
          "author": null,
          "description": "印象中使用的第一个 PC 音乐播放器是「千千静听」，大概是 08 年左右。我还清楚地记得它自带了一首梁静茹的歌「Love is everything」，动听的旋律至今萦绕耳旁。\n\n千千静听的左上角有一组随着音乐跳动的柱子，我想大家都习以为常了，很多播放器都有这功能。但是其实有没有想过，这是怎么实现的？\n要理解这个问题，我们首先要理解声音是什么。\n波\n中学物理有介绍过，声音是由物体振动产生的，这个振动经由介质传导到我们的耳朵中引起耳膜振动从而让我们听见声音。\n我们可以用波形来描述振动，其中横轴是时间，纵轴是振动的位移，也就是离开原点的距离。\n振动的两个关键属性是频率和振幅，频率是指一秒钟振动多少次，对应于音高，频率越高声音越尖锐刺耳。\n振幅则表示最大的位移值，对应于音量，振幅越大声音越响。\n\n上图是用 matplot 绘制的一个正弦波，可以看出在 0.01s 内振动了 2 次，因此频率是 200，振幅是 1。\nfrom matplotlib import pyplot as plt\nimport numpy as np\n\ndef sin_wave(hz):\n  x = np.linspace(0, 0.01, 1000, endpoint=False)\n  y = np.sin(x * hz * 2 * np.pi)\n  plt.plot(x, y)\n  plt.xlabel(\"Time\")\n  plt.axhline(y=0, color='k')\n  plt.show()\n\nsin_wave(200)\n\n\n这种最简单的波形对应的声音叫做 pure tone，顾名思义，非常的简单而且纯粹。\n下面是用 scipy 生成的 200hz 的声音，大家可以听听看。\nimport scipy.io.wavfile as wav\n\nSAMPLE_RATE = 44100\nDURATIO…",
          "link": "https://cjting.me/2021/08/07/fourier-transform-and-audio-visualization/",
          "publishedOn": "2021-08-06T16:57:45.000Z",
          "wordCount": 1017,
          "title": "音频可视化：采样、频率和傅里叶变换"
        }
      ]
    }
  ],
  "cliVersion": "1.11.0"
}