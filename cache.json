{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": [
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.14.4",
          "author": null,
          "description": "Fixed: Several style issues",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.14.4",
          "publishedOn": "2022-02-14T06:58:28.000Z",
          "wordCount": 258,
          "title": "v1.14.4",
          "imageUrl": "https://opengraph.githubassets.com/9a7043530dac30c2f389b7a285822cfe3c2b54efc7d2cdc63a0735d3cc5095a2/osmoscraft/osmosfeed/releases/tag/v1.14.4"
        },
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.14.3",
          "author": null,
          "description": "style tweak",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.14.3",
          "publishedOn": "2022-02-14T06:29:16.000Z",
          "wordCount": 255,
          "title": "v1.14.3",
          "imageUrl": "https://repository-images.githubusercontent.com/312859305/30a63d00-a162-11eb-8a1d-a3167673e96a"
        },
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.14.2",
          "author": null,
          "description": "New: Adjust article grouping based on timezone. You need to add timezone in osmosfeed.yml for accurate grouping. See details in documentation.\nNew: Card title now toggles card content\nNew: all toggles on the UI are persisted with local storage. You can use it to track read/unread status within a single browser.\nNew: Build timestamp now links to the GitHub Action run\nChanged: Sources are sorted based on publish time rather than alphabetical order\nChanged: Style adjusted for easier reading\nFixed: Horizontal overflow on Safari\nFixed: HTML syntax error in default template",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.14.2",
          "publishedOn": "2022-02-14T05:53:33.000Z",
          "wordCount": 356,
          "title": "v1.14.2",
          "imageUrl": "https://opengraph.githubassets.com/3d1aa7f7484f74c258c25be470129b65acc359f03644040243b05803daae68aa/osmoscraft/osmosfeed/releases/tag/v1.14.2"
        },
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.14.1",
          "author": null,
          "description": "git typo in gh run url",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.14.1",
          "publishedOn": "2022-02-14T05:26:23.000Z",
          "wordCount": 259,
          "title": "v1.14.1",
          "imageUrl": "https://repository-images.githubusercontent.com/312859305/30a63d00-a162-11eb-8a1d-a3167673e96a"
        },
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.14.0",
          "author": null,
          "description": "New: Adjust article grouping based on timezone. You need to add timezone in osmosfeed.yml for accurate grouping. See details in documentation.\nNew: Card title now toggles card content\nNew: all toggles on the UI are persisted with local storage. You can use it to track read/unread status within a single browser.\nNew: Build timestamp now links to the GitHub Action run\nChanged: Sources are sorted based on publish time rather than alphabetical order\nChanged: Style adjusted for easier reading\nFixed: Horizontal overflow on Safari\nFixed: HTML syntax error in default template",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.14.0",
          "publishedOn": "2022-02-14T05:13:00.000Z",
          "wordCount": 399,
          "title": "v1.14.0: V1.14.0 (#79)",
          "imageUrl": "https://repository-images.githubusercontent.com/312859305/30a63d00-a162-11eb-8a1d-a3167673e96a"
        },
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.13.0",
          "author": null,
          "description": "New: Thumbnail image display for each article\nNew: Improved color, spacing, and typography for easier reading\nNew: Click the date to toggle all accordions on that day. Ctrl + Click to toggle all accordions on the entire site.\nChanged: All sections are expanded by default\nChanged: Switched to vitest for easier testing\nFixed: Long string (e.g. URL) caused horizontal overflow\nThank you: @naari3, @tianheg",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.13.0",
          "publishedOn": "2022-02-13T05:05:17.000Z",
          "wordCount": 340,
          "title": "v1.13.0",
          "imageUrl": "https://opengraph.githubassets.com/fc77c41c87b2cd4d8990f4c940e0ddf681667b6b6e4363b0f609861b7ae5b6d8/osmoscraft/osmosfeed/releases/tag/v1.13.0"
        },
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.12.1",
          "author": null,
          "description": "Fixed: Future articles appeared in the feed\nFxied: Security vulnerability from axios\nThank you: @naari3",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.12.1",
          "publishedOn": "2022-02-12T17:46:42.000Z",
          "wordCount": 269,
          "title": "v1.12.1",
          "imageUrl": "https://opengraph.githubassets.com/d69790a31f94b1adf743c58bae86b9754de6969cceb83f11b8fbeb28ab1ad632/osmoscraft/osmosfeed/releases/tag/v1.12.1"
        }
      ]
    },
    {
      "title": "ShanSan",
      "feedUrl": "https://shansan.top/rss2",
      "siteUrl": "https://yeshan333.github.io/",
      "articles": [
        {
          "id": "https://yeshan333.github.io/2022/01/31/fsm-smr-dfsm/",
          "author": null,
          "description": "<script src=\"/assets/js/APlayer.min.js\"",
          "link": "https://yeshan333.github.io/2022/01/31/fsm-smr-dfsm/",
          "publishedOn": "2022-01-31T17:32:51.000Z",
          "wordCount": 362,
          "title": "状态机的一点儿事（fsm-smr-dfsm）",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "酷 壳 – CoolShell",
      "feedUrl": "https://coolshell.cn/feed",
      "siteUrl": "https://coolshell.cn",
      "articles": [
        {
          "id": "https://coolshell.cn/?p=22173",
          "author": "陈皓",
          "description": "写这篇文章的原因主要还是因为V2EX上的这个贴子，这个贴子中说—— “对接同事的接口，他定义的所有接口都是 post 请求，理由是 https 用 post 更...\n Read More  Read More\n“一把梭：REST API 全用 POST ” first appeared on 酷 壳 - CoolShell.",
          "link": "https://coolshell.cn/articles/22173.html",
          "publishedOn": "2022-02-13T04:28:47.000Z",
          "wordCount": 1525,
          "title": "“一把梭：REST API 全用 POST ”",
          "imageUrl": "https://coolshell.cn/wp-content/uploads/2022/02/http_method.png"
        },
        {
          "id": "https://coolshell.cn/?p=22157",
          "author": "陈皓",
          "description": "今天看到微博上有一个热点事件， 是一个关于某公司做的一个监控员工离职倾向的软件，从截图中可以看到员工访问招聘网站的次数，还有投递的简历以及搜索的关建词等等信息，...\n Read More  Read More\n谈谈公司对员工的监控 first appeared on 酷 壳 - CoolShell.",
          "link": "https://coolshell.cn/articles/22157.html",
          "publishedOn": "2022-02-12T07:50:06.000Z",
          "wordCount": 741,
          "title": "谈谈公司对员工的监控",
          "imageUrl": "https://coolshell.cn/wp-content/uploads/2022/02/monitoring.jpeg"
        }
      ]
    },
    {
      "title": "面向信仰编程",
      "feedUrl": "https://draveness.me/feed.xml",
      "siteUrl": "https://draveness.me/",
      "articles": []
    },
    {
      "title": "卡瓦邦噶！",
      "feedUrl": "https://www.kawabangga.com/feed",
      "siteUrl": "https://www.kawabangga.com",
      "articles": []
    },
    {
      "title": "MoeLove",
      "feedUrl": "https://moelove.info/index.xml",
      "siteUrl": "https://moelove.info/",
      "articles": [
        {
          "id": "https://moelove.info/2022/02/16/K8S-%E7%94%9F%E6%80%81%E5%91%A8%E6%8A%A5-Istio-%E5%8D%B3%E5%B0%86%E5%8F%91%E5%B8%83%E9%87%8D%E5%A4%A7%E5%AE%89%E5%85%A8%E6%9B%B4%E6%96%B0%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E5%8F%97%E5%BD%B1%E5%93%8D/",
          "author": "zhangjintao9020@gmail.com (张晋涛)",
          "description": "「K8S 生态周报」内容主要包含我所接触到的 K8S 生态相关的每周值得推荐的一些信息。欢迎订阅知乎专栏「k8s生态」。\nIstio 即将发布重大安全更新，多个版本受影响\nIstio 产品安全工作组近期发现 Istio 中存在一些安全漏洞，其中 最高级别的漏洞被评级为高严重性。\n鉴于当前 Istio 的漏洞披露政策，所以目前我们不会透露具体的漏洞细节。\n在一周后的 2 月 22 日，将会发布 Istio v1.11.7、v1.12.3 和 v1.13.1 版本修正这些安全漏洞。届时会再更新漏洞的详细内容。\n请参考官方通告\n此外，本周 Istio 也发布了 v1.13.0 正式版， 在 v1.13.1 版本发布前，我不建议大家将自己所用的 Istio 升级到 v1.13.0 。\n虽然不建议现在升级，但我们也可以关注下 v1.13.0 带来的一些值得关注的变更：\nv1.13.0 版本中为东西向流量提供了基于主机名的多网络网关支持。主机名可以在控制面中被解析，解析记录可被用作 endpoint。\n如果你不需要这个行为，或者想要恢复到之前版本中的默认行为，可以为 istiod 添加 RESOLVE_HOSTNAME_GATEWAYS=false 的配置。\n此外，它还支持重写 gRPC 探针，以及通过 proxyMetadata 提供了在 Envoy 工作线程间的重平衡，并且通过学习 Kubernetes 的探测\n行为，改善了 istio-agent 健康检查的探测，这样它就不会再重用连接了。请参考 #36390 。\n同时我们会发现在这个版本中它对 Telemetry API 的支持增加了不少，尤其是它为 access log 支持了\nCommon Expression Language (CEL) filter 。如果你觉得对 CEL 有些陌生，那么你可以看下我之前的文章 《K8S…",
          "link": "https://moelove.info/2022/02/16/K8S-%E7%94%9F%E6%80%81%E5%91%A8%E6%8A%A5-Istio-%E5%8D%B3%E5%B0%86%E5%8F%91%E5%B8%83%E9%87%8D%E5%A4%A7%E5%AE%89%E5%85%A8%E6%9B%B4%E6%96%B0%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E5%8F%97%E5%BD%B1%E5%93%8D/",
          "publishedOn": "2022-02-15T16:14:36.000Z",
          "wordCount": 406,
          "title": "K8S 生态周报| Istio 即将发布重大安全更新，多个版本受影响",
          "imageUrl": "https://gitee.com/tlrr/awesome/raw/master/2020-9-9/1599632564572-mp-qrcode.png"
        }
      ]
    },
    {
      "title": "CJ Ting's Blog",
      "feedUrl": "https://cjting.me/index.xml",
      "siteUrl": "https://cjting.me/",
      "articles": []
    },
    {
      "title": "codedump的网络日志 on codedump的网络日志",
      "feedUrl": "https://www.codedump.info/index.xml",
      "siteUrl": "https://www.codedump.info/",
      "articles": [
        {
          "id": "https://www.codedump.info/post/20220211-weekly-5/",
          "author": null,
          "description": "引言：本期介绍时序数据库的存储模型，只有理解了时序数据的存储模型，才能更好的了解时序数据库的优缺点以及其适用场景。\n从存储模型聊一聊时序数据库的应用场景\n想写本文，是因为看到了知乎上的一篇文章：投资数据库领域：2021年总结（NoSQL、图、时序） - 知乎，里面谈到了时序数据库：\n但缺陷是实际的市场空间较小。跟通用型数据库，尤其是OLAP数据库相比，时序数据库最大的差异点在于对于时间维度建立了独特的索引与优化，而其他所谓schemaless等特性在OLAP数据库上都能做到，不存在技术障碍。这也就是为什么其实在公司做时序场景的数据库选型的时候会直接将时序数据库与一些OLAP数据库（比如ClickHouse）做比较。如果要把时序数据库往更宽的场景发展，那就是想好如何与那么多的通用型数据库做竞争了。\n由于之前有过短暂一段时间的时序数据库从业经历，所以想从我的理解聊聊时序数据库的应用场景。\n要了解应用场景，需要首先对时序数据库的存储模型有个大概的了解，在下文中我尽量不涉及到太艰深的技术术语来描述我的理解。由于我从业时序数据库的时间并不长，所以有可能理解会有偏差。\n何谓“时序数据（time-series data）”？就我个人粗浅的理解，就是任何一定会带上时间戳（timestamp）维度的数据。日常生活里，在微博、微信等社交媒体的发现就可以理解时序数据，因为它们肯定都有一个发言时间，所以有时候会把个人看到的微博等称为“时间线（timeline）”。对应到工业领域，比如一个电表每小时上报的用电量也是时序数据，比如服务器监控时每隔15分钟采集的性能数据也是时序数据。\n由于时序数据天然有“时间“这个维度，为了更好的优化其写入性能，通常专门存储时序数据的存储引擎会按照时间分块、按列来存储数据，如下图：\n\n\n\n上图中，演示用的数据格式有三列：\n时间戳。\nA指标。\nB指标。\n通常，时序数据库存…",
          "link": "https://www.codedump.info/post/20220211-weekly-5/",
          "publishedOn": "2022-02-11T14:27:57.000Z",
          "wordCount": 264,
          "title": "周刊（第5期）：从存储模型聊一聊时序数据库的应用场景",
          "imageUrl": null
        },
        {
          "id": "https://www.codedump.info/post/20220204-weekly-4/",
          "author": null,
          "description": "引言：虎年大年初一的晚上，一场脆败发生在世界杯亚洲区预选赛中国客场对越南队的比赛上。如今，“你居然还在看中国男足”，仿佛已成一句骂人的质问。本期从我角度来谈谈，我眼中的中国足球，以及说说我为什么还一直在关注这个领域。\n我为什么还在看中国足球\n我从94年开始看球，中国足球绝大部分的重要比赛都看了：94年亚运会决赛输给乌兹别克斯坦、97年大连金州被伊朗逆转、2002年世界杯出线…太多了，数不过来，算是从我开始看球之后就一直有关注中国足球。\n在看国足比赛二十多年之后，慢慢地从一个参与者、评论者的角色，切换到了近似于第三方视角的观察者角色。切换到这个视角之后，让我能从里面各种情绪里抽离出来，当然高兴的时候也会像个普通球迷那样欢乐，比如2017年世界杯预选赛击败韩国这样的比赛。\n我国虽然在奥运会上取得了看似很好的成绩，金牌数总是保持前列，但是有一说一，并不算是体育大国，更别提强国了。\n只看我们占优势、能取得好成绩的项目，大多有这样的特点：小众、冷门，这样的特点直接导致这样的项目，实际是商业化程度很低的领域。这样的领域，国外参与的人不会太多，也因此可以继续沿用以前我们擅长的打法：集中力量办大事，换到体育这个领域，就是所谓的“举国体制”。\n这样做的好处是，能用较少的资源拿到不错的效果，因为大部分人只关注金银牌这些数字，并不关心你怎么拿到的。这个策略，用知乎上一个回答的话来说叫“田忌赛马”，见：为什么中国的其他运动项目那么强，到了男足这里就不行呢？\n在商业化、职业化很好的体育项目，比如足球、篮球、网球等等领域，我们的成绩就不这么好了，李娜、姚明、刘翔是少数在这些领域拿得出手的世界级运动员。（后面会专门谈谈女足）\n一言以蔽之：举国体制从目前的成绩来看，并不适合职业化、商业化很好的体育项目。\n“足球是体育工业化的集大成者”（见(为什么整个中国都知道中国足球的问题，为什么还是没有办法解决？ - …",
          "link": "https://www.codedump.info/post/20220204-weekly-4/",
          "publishedOn": "2022-02-04T13:55:23.000Z",
          "wordCount": 211,
          "title": "周刊（第4期）：为什么我还在看中国足球",
          "imageUrl": null
        },
        {
          "id": "https://www.codedump.info/post/20220201-sqlite-btree-5-btree/",
          "author": null,
          "description": "《sqlite3.36版本 btree实现》系列文章：\nsqlite3.36版本 btree实现（零）- 起步及概述 - codedump的网络日志\nsqlite3.36版本 btree实现（一）- 管理页面缓存 - codedump的网络日志\nsqlite3.36版本 btree实现（二）- 并发控制框架 - codedump的网络日志\nsqlite3.36版本 btree实现（三）- journal文件备份机制 - codedump的网络日志\nsqlite3.36版本 btree实现（四）- WAL的实现 - codedump的网络日志\nsqlite3.36版本 btree实现（五）- Btree的实现 - codedump的网络日志\n概述\n前面的内容里，详细介绍了页面管理器部分的内容，回顾一下页面管理器和Btree模块的分工：\n页面管理器：提供页面级别的物理管理，如缓存、读取、写入、页面备份等。\nBtree：根据btree数据结构提供页面在逻辑上的组织，以及单个页面内的划分。\n还记得最开始，研究生产级别btree实现时的几个疑问：\n数据库教科书中，演示btree算法时，使用的都是定长的简单数据。实际应用中，存储的数据都是变长的，那么应该如何存储变长的数据呢？\n如果一行数据的大小，超过了一个物理页面的大小，又该如何处理？\n删除一行数据之后，它留下的空间如何回收利用？而回收利用时，不可避免的会出现碎片的问题，比如原先10字节的数据被回收，用来存储9字节的数据，多出来的1字节数据就被浪费了，碎片问题应该如何解决？\n这些问题，都与“一个物理页面内数据如何组织”这个核心问题息息相关，带着这些问题展开btree实现的讨论。\n在下文中，不会讨论btree算法的细节，这部分不熟悉的，可以回看之前的文章或者教科书：\nB树、B+树索引算法原理（上） - codedump的网络日志\nB树、…",
          "link": "https://www.codedump.info/post/20220201-sqlite-btree-5-btree/",
          "publishedOn": "2022-02-01T07:55:40.000Z",
          "wordCount": 982,
          "title": "sqlite3.36版本 btree实现（五）- Btree的实现",
          "imageUrl": null
        },
        {
          "id": "https://www.codedump.info/post/20220129-weekly-3/",
          "author": null,
          "description": "引言：在我之前的工作里，因为各种原因，断续在游戏行业里有过总共大概四年左右的从业时间，今天想从我的视角聊聊游戏行业后端开发相关的技术，供那些想在这个行业从业，尤其是后端开发从业人员一些参考。\n一个前游戏开发者眼中的游戏后端技术\n由于我从业的方向都是后端开发，所以这里仅谈论游戏开发后端的技术。\n游戏本质是个内容行业，所以游戏开发时相当一部分工作内容，就是不停的更新新的内容出来给玩家消费。这些内容包括但不限于：新的英雄、技能、玩法，等等。\n而要支撑这些玩法，相当一部分是策划的配表数据，即：\n程序员把玩法的框架、逻辑搭建好，留出读玩法数据的接口来。\n玩法数据由负责该玩法的策划来配表实现。\n这其实就是很朴素的“表驱动”的编程方式。\n因为这个原因，所以游戏服务器启动时，要加载相当多的数据，主要有：\n玩家的数据，包括账号、角色、帮派、金钱等数据。\n玩法相关的策划配表数据。比如一个场景的坐标位置、NPC的坐标位置、任务，等等。\n由于需要在启动的时候要加载很多数据，游戏服务器才能完成初始化，所以“编译型”语言在游戏开发里并不适用来编写游戏玩法逻辑，试想下面的开发场景：\n策划提出了新的玩法需求。\n开发使用如C++这样的编译型语言编码实现玩法。\n编译新修改的代码：这里面有包括了编译、修改编译不通过时候的报错，等等。\n停止服务器，重启服务器来验证玩法的逻辑。\n可以看到，姑且不论其他因素，单是每次验证代码修改时需要停服、重启服务器的流程，而重启时又要加载一堆数据才能完成初始化，这个过程就严重影响开发效率。\n换言之，“编译型”语言并不适合于用来编码在游戏开发里需要经常变更的玩法逻辑。\n于是，一种新的开发架构出现了，见下图。\n\n\n\n在图中，将游戏服务器架构分为了两层：\n引擎层：这部分由C++编码，实现了游戏开发中与具体逻辑关系不大、且不太会变更的部分，如网络数据收发、数据库访问，等等。\n脚本层：这部分…",
          "link": "https://www.codedump.info/post/20220129-weekly-3/",
          "publishedOn": "2022-01-29T06:21:20.000Z",
          "wordCount": 384,
          "title": "周刊（第3期）：一个前游戏开发者眼中的游戏后端技术",
          "imageUrl": null
        },
        {
          "id": "https://www.codedump.info/post/20220123-weekly-2/",
          "author": null,
          "description": "从笔记软件谈被体制化\n前两周，一则收购消息，在偌大的中文互联网上，几乎没有掀起任何的讨论：\n为知笔记并入 ONES，WizNote X 迎来新的征程\n我是为知笔记的老用户了，从 2011 年就开始使用为知笔记，即便是现在不怎么使用的情况下，也已经把 VIP 会员续费到了 2024 年。在我看来，为知笔记是一个气质与众不同的互联网产品：\n在互联网上几乎没看到这款产品主动来宣传自己，都是靠用户的口碑传播，最开始我也是通过用户的介绍知道这款产品的。\n是最早支持 Markdown 的笔记本软件，这在我最开始了解 MD 并且开始用这个格式来记录笔记时起了很大的帮助。\n价格良心。\n所以，当看到为知笔记被收购的新闻，心情还是有些复杂的。我大体知道一些互联网产品的玩法，知道为知笔记应该生存的不太好，被收购了也许对团队是个好事。\n于是，我开始回想起来，到底是什么样的契机，让我开始慢慢抛弃了传统的笔记软件，以及我现在都用什么方式记录笔记。\n在 Evernote 刚出来的时候，多端可用、可以收藏文章、记录自己的笔记等等，我也大概是那时候开始记录笔记的，然后就是后来使用网易云笔记，再到主力使用为知笔记。\n让我逐渐意识到不应该把笔记托管到笔记软件上，有那么几个原因：\n笔记软件之间竞争激烈，可能你从 A 家换到 B 家的产品时，数据的迁移是个大问题，有时候就不得不丢掉一部分难迁移的数据。比如把数据从 Evernote 迁移出来就很麻烦，还好我之前放在这里的笔记也不太用得上了。\n\n\n\nMarkdown 格式开始流行以后。\n\n\n\n我大概是从2015年开始用MD格式开始写笔记的，这种格式马上就让我爱上了记录笔记：\n格式对比LaTex来说太简单了，只有常见的几种格式，易学易写。\n纯文本格式，这意味着用任何文本编辑器就能打开。\n搭配好用的编辑器，能获得”所见即所得“的体验。\n由此，我开始反思之前对笔记本软件的使…",
          "link": "https://www.codedump.info/post/20220123-weekly-2/",
          "publishedOn": "2022-01-23T07:38:31.000Z",
          "wordCount": 229,
          "title": "周刊（第2期）：从笔记软件谈被体制化",
          "imageUrl": null
        }
      ]
    }
  ],
  "cliVersion": "1.14.4"
}